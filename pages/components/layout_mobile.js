import Head from 'next/head'
import { useState, useEffect } from 'react'
import { isMobile } from 'react-device-detect';
import styles from './Layout.module.css'
import stylesm from './LayoutMobile.module.css'
export default function Layout(props) {
    const { children } = props
    const [scrolled, setScrolled] = useState(false);
    const [hamburger, setHam] = useState(true);
    const handleScroll = () => {
        const offset = window.scrollY;
        //console.log(offset)
        if (offset > 10) {
            setScrolled(true);
        }
        else {
            setScrolled(false);
        }
    }
    let navbarClasses = ['navbar scrolled dropIn'];
    if (scrolled) {
        navbarClasses.push('scrolled dropIn');
    }
    useEffect(() => {
        /* window.addEventListener('scroll', handleScroll) */
    }, [])
    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
                <meta name="description" content="Wholesale jewellery store that offers a variety of custom designs made to order."></meta>
            </Head>
            <div className={stylesm.layout_wrapper}>
                <div style={{ height: hamburger ? "0px" : "100px", padding: "0px" }} className={stylesm.colapsable_wrapper}>

                </div>
                <div className={stylesm.overlaywrapper}>
                    <div >
                        <img style={{ maxHeight: "100px" }} src={`/img/logo.png`} />
                    </div>
                    <div >
                        <div className={stylesm.HamButton} onClick={() => { setHam(!hamburger) }}>
                            <div></div>
                            <div></div>
                            <div></div>
                        </div>
                    </div>
                </div>
                <div className={`${stylesm.body_wrapper} ${hamburger ? stylesm.expand_ham : stylesm.colapse}`}>{children}</div>
                <footer></footer>
            </div>
        </>
    )
}